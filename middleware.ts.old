import { NextResponse } from 'next/server';
import { NextRequest } from 'next/server';

const publicPaths = ['/', '/signin', '/signup'];

export function middleware(request: NextRequest) {
  const path = request.nextUrl.pathname;

  const isPublicPath = publicPaths.includes(path);
  const isApiPath = path.startsWith('/api/');
  const token = request.cookies.get('next-auth.session-token')?.value || '';

  if (isPublicPath && token) {
    return NextResponse.redirect(new URL('/', request.nextUrl));
  }

  if (!isPublicPath && !token && !isApiPath) {
    return NextResponse.redirect(new URL('/signin', request.nextUrl));
  }
  if (isApiPath && token) {
    console.log(request);
  }
  if (isApiPath && !token) {
    return NextResponse.json({ message: 'not authorized' });
  }
}

export const config = {
  matcher: ['/client', '/server', '/dashboard', '/api/test'],
};
